//<МИКСИНЫ>===================================================================================================
@mixin flexbox() {display:-webkit-box;display:-moz-box;display:-ms-flexbox;display:-webkit-flex;display:flex;font-size:14px;}
// Адаптивное свойство
$maxWidth: 1920;
$maxWidthContainer: 1200;

@mixin adaptive-value($property, $startSize, $minSize, $type) {
	$addSize: $startSize - $minSize;
	@if $type==1 {
		// Отзывчивость внутри контенера (меньше контейнера)
		#{$property}: $startSize + px;
		@media (max-width: #{$maxWidthContainer +  px}) {
			#{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainer - 320}));
		}
	} @else if $type==2 {
		// Отзывчивость за пределами контенера (больше контейнера) Когда сайт открывается на разрешениях, больше макетного
		#{$property}: $startSize + px;
		@media (min-width: #{$maxWidthContainer +  px}) {
			#{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
		}
	} @else {
		// Отзывчивость всегда, по все ширине
		#{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainer - 320}));
	}
}
//<МИКСИНЫ>===================================================================================================

//<ШРИФТЫ>==============================================================================================
//<ШРИФТЫ>==============================================================================================

//<Функции>==========================================================================================

//<Функции>==========================================================================================

//<ПЕРЕМЕННЫЕ>==================================================================================

//<ПЕРЕМЕННЫЕ>==================================================================================

//<ОБНУЛЕНИЕ, ОБЩИЕ ПАРАМЕТРЫ>========================================================================
@import "nullstyle.scss";
//<ОБНУЛЕНИЕ, ОБЩИЕ ПАРАМЕТРЫ>========================================================================

//<ОБОЛОЧКА>=====================================================================================================
.wrapper{
	min-height: 100%;
	overflow: hidden;
}
//<ОБОЛОЧКА>=====================================================================================================

//</ОСНОВНАЯ СЕТКА>=================================================================================
html {
}

body{
	height: 100%;
	line-height: 1;
	background-color: #333;
	color: #fff;
}

.page {
padding: 50px 0;

	&__block {
		margin: 0px 0px 50px 0px;
	}
}

.block {

	&_one &__body {
		background-color: #794f45;
	}

	&_two &__body {
		background-color: #77608d;
	}

	&_three &__body {
		background-color: #7a956b;
	}

	&__container {
		max-width: 1200px;
		padding: 0px 15px;
		margin: 0px auto;
	}

	&__body {
		@include adaptive-value("padding", 50, 20, 1); // "Изменяемое значение", начальное макетное значение, конечное значение, режим изменения (выбрать из миксина)
	}

	&__title {
		line-height: 130%;
		@include adaptive-value("font-size", 30, 20, 1);
		@include adaptive-value("margin-bottom", 20, 10, 1);
	}

	&__text {
		line-height: 150%;
		@include adaptive-value("font-size", 16, 14, 1);
	}
}

@media (max-width:1200px) {
	.block__body {
		// 20px -минимальный размер паддинга, который нужен на разрешении 1200px
		// дальше - добавочное число, где от изначального значения в 50px отнимаем - минимальное - 20px
		// все это умножается на следующее значение... От ширины вьюпорта отнимаем минимальную 
		// ширину экрана (320px) и делим все это на ширину ограничивающего контейнер за вычетом 320px
		//padding: calc(20px + (50 - 20) * ((100vw - 320px) / (1200 - 320)));
	}
	
	.block__title {
		//font-size: calc(20px + (30 - 20) * ((100vw - 320px) / (1200 - 320)));
		//margin-bottom: calc(10px + (20 - 10) * ((100vw - 320px) / (1200 - 320)));
	}

	.block__text {
		//font-size: calc(14px + (16 - 14) * ((100vw - 320px) / (1200 - 320)));
	}
}